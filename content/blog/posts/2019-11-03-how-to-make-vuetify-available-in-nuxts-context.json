{
  "lang": "EN",
  "title": "How to Make Vuetify available in Nuxt's context",
  "date": "2019-11-03T10:38:48.295Z",
  "thumbnail": "/images/uploads/vuetify-in-nuxt-context.png",
  "tags": [
    "js",
    "vuetify",
    "nuxt",
    "vue"
  ],
  "body": "You'll probably are importing Vuetify.js in a plugin like:\n\n<pre class=\"line-numbers language-js\">\n<code>// plugins/vuetify.js\nimport Vue from 'vue'\nimport Vuetify from 'vuetify/lib'\n\nVue.use(Vuetify, {...options})\n\n</code></pre>\n\n> Thanks to using `Vue.use`, you have `$vuetify` available in your components instances. You can access to it with `this.$vuetify` (in the JS part of your component).\n\nBut, what if we want to access to the Vuetify object in our context? Say in [`asyncData`, `fetch`, `plugins`, `middleware`s and `nuxtServerInit`](https://nuxtjs.org/api/context).\n\nYou only need to add a few lines to your plugin:\n\n<pre data-line=\"7-10\" class=\"line-numbers language-js\">\n<code>// plugins/vuetify.js\nimport Vue from 'vue'\nimport Vuetify from 'vuetify/lib'\n\nVue.use(Vuetify, {...options})\n\nexport default function(_, inject) {\n  // make \\`$vuetify\\` available in Nuxt context\n  inject('vuetify', Vue.prototype.$vuetify)\n}\n</code></pre>\n\nNotice that we are not using the first parameter, that's the context, btw. We only need the second parameter, Nuxt's [`inject` method](https://nuxtjs.org/guide/plugins/#inject-into-context). That's why we use the `_` as first parameter, as a \"throwaway variable\", as [some people](https://twitter.com/wesbos/status/1186640315907788800) call it.\n\nOh, and remember to include the `vuetify` plugin in your `nuxt.config.js` file:\n\n<pre class=\"line-numbers language-js\">\n<code>//nuxt.config.js:\n\nexport default {\n  plugins: ['~/plugins/vuetify']\n}\n</code></pre>\n\nüññüèæ",
  "description": "How to  make `$vuetify` available in Nuxt context to make it accessible from a plugin, or asyncData or fetch methods and/or middlewares and nuxtServerInit vuex action."
}