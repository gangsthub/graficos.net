{
  "lang": "EN",
  "title": "Setting up a Nuxt Blog with Netlify, Netlify-CMS and Netlify Identity.",
  "date": "2018-08-21T16:02:25.528Z",
  "thumbnail": "/images/uploads/sunset-palms-dubai-picjumbo-com.jpg",
  "body": "First you need to publish the repository to Github. So If you don't have a Github account yet, [go create one](https://github.com/join).\n\nIf you are using Nuxt, [any template](https://github.com/nuxt-community/awesome-nuxt#starter-template) will do the job. Remember to hide anything you don't want to be published in the `.gitignore` first (check mine, [for example](https://github.com/gangsthub/graficos.net/blob/master/.gitignore)).\n\nI used this one as inspiration. I would recommend to use it for the scaffolding:\n\n<https://github.com/renestalder/nuxt-netlify-cms-starter-template>\n\nOk, now that our site is published (check [mine](https://github.com/gangsthub/graficos.net) for instance), let's link it to Netlify, so we get to do the deploy job from there:\n\n![Image showing the Netlify interface. We want to show specially the position of the \"New Site from Git\"](/images/uploads/2018-09-01-16_20_20-sites-_-paul-melero.png)\n\nSee the **`\"`New Site from Git`\"` button**? From there, Netlify will make us browse our repositories from Github and we have to choose our Blog repository.\n\nThe default commands for getting a Nuxt site up and ready are:\n\n* **`npm run generate`** (for generating a static site, wich is the one we want).\n* Or`npm run build && npm start` for the _SPA_ mode. But not in this case.\n\nIt will also ask us to specify the folder from where we are serving. It's **`dist`** for our Nuxt sites.\n\nOk, now let's add the CMS capabilities: Enters [Netlify CMS](https://www.netlifycms.org/).\n\n![Image showing the jumbo header that appears when you enter to the netlify CMS site.](/images/uploads/2018-12-11-17_16_29-window.png)\n\nWith their own Headless CMS implementation we will be able to add \"posts\" to our blog and store them on our Github account. Specifically the route will be specified in our netlifyCMS [config file](https://www.netlifycms.org/docs/configuration-options/). It would look something like this:\n\n```yaml\nbackend:\n  name: github\n  accept_roles: #optional - accepts all users if left out\n    - root\n  repo: 'gangsthub/graficos.net'\nmedia_folder: 'static/images/uploads' # Media files will be stored in the repo under static/images/uploads\npublic_folder: '/images/uploads' # The src attribute for uploaded media will begin with /images/uploads\ncollections:\n  - name: 'blog' # Used in routes, e.g., /admin/collections/blog\n    label: 'Post' # Used in the UI\n    folder: 'content/blog/posts' # The path to the folder where the documents are stored\n    create: true # Allow users to create new documents in this collection\n    slug: '{{year}}-{{month}}-{{day}}-{{slug}}' # Filename template, e.g., YYYY-MM-DD-title.md\n    format: 'json'\n    fields: # The fields for each document, usually in front matter\n      - {label: \"Lang\", name: \"lang\", widget: \"string\"}\n      - {label: \"Title\", name: \"title\", widget: \"string\", tagname: \"h1\"}\n      - {label: \"Publish Date\", name: \"date\", widget: \"datetime\"}\n      - {label: \"Featured Image\", name: \"thumbnail\", widget: \"image\", required: true}\n      - {label: \"Body\", name: \"body\", widget: \"markdown\"}\n    meta:\n      - {label: \"SEO Description\", name: \"description\", widget: \"text\", required: true, pattern: [\"^.{50,300}$\", \"Must be within 50 and 300 chars\"]}\n```\n\nAs you can see in the `collections.folder` property we specify the path. We can define as many `collections` as needed for different posts or pages.\n\nThe `accept_roles` option is also important because it's related to the admin side of the CMS which we are going to enable in a bit.\n\nWithin the Netlify platform, we need to enable **Identity**, one of its crown jewel features. You will see it in the dashboard menu:\n\n![Image showing the link position in the app.netlify.com dashboard menu](/images/uploads/2018-12-11-17_27_46-window.png)\n\nOn the Site settings it is also mandatory:\n\n* to enable the Git Gateway (On the identity instace, if I am not wrong), so both platforms can communicate:\n  * `https://app.netlify.com/sites/<YOUR SITE>/settings/identity#git-gateway`\n* and to set up my users. In this case, I only have one user with the `root` role.\n  * `https://app.netlify.com/sites/<YOUR SITE>/settings/general`\n* also, enable OAuth in user settings:\n  * `https://app.netlify.com/sites/<YOUR SITE>/settings/access#oauth`\n\nRemember that netlifyCMS is going to look for the `config.yml` we were talking about. So if you are using Nuxt.js, place it somewhere like under static (that folder contents gets copied to the root of your page when you generate the static version).\n\nYou need also to add your Identity entry point. In my case (full disclosure) is`/static/admin.html`. And place there the `netlify-cms.js` external link as described in the [documentation](https://www.netlifycms.org/docs/add-to-your-site/).\n\nOk, push your changes to see under deploys a preview deploy of that entry point.\n\nNice!\n\nLast but not least, checkout how to [generate your blog routes dynamically](https://github.com/gangsthub/graficos.net/blob/f071cc0c82888932cf3bdaed202e16675d6c0ad3/nuxt.config.js#L123-L132):\n\n```js\n// nuxt.config.js\n\nconst dynamicRoutes  = getDynamicPaths({ '/blog': 'blog/posts/*.json' });\n\nmodule.exports = {\n  ...\n  generate: {\n    routes: dynamicRoutes,\n  },\n  ...\n}\n\nfunction getDynamicPaths(urlFilepathTable) {\n  return [].concat(\n    ...Object.keys(urlFilepathTable).map(url => {\n      var filepathGlob = urlFilepathTable[url];\n      return glob\n        .sync(filepathGlob, { cwd: 'content' })\n        .map(filepath => `${url}/${path.basename(filepath, '.json')}`);\n    })\n  );\n}\n```\n\nAnd also, check how to create dynamic routes on [Nuxt](https://nuxtjs.org/guide/routing/#dynamic-routes).\n\nI'm leaving my blog OS, so you can always check how I did it on my repository.\n\nThanks for reading! ðŸ˜‹ðŸ˜Š",
  "description": "Setting up from scratch a blog made with Nuxt.js and using JAMStack technologies: a headless cms, and the fantastic power of Netlify integrated with Github."
}